{"version":3,"sources":["About.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["About","window","branch","closeJourney","setTimeout","url","location","origin","console","log","track","warn","Component","Home","browserHistory","createBrowserHistory","App","history","className","to","path","onClick","err","data","JSON","stringify","listen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","config","isDevelopmentMode","identifyRequest","userIdentities","other3","customerid","identityCallback","result","getUser","setUserAttribute","BranchMetrics","register","mParticle","init","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAGqBA,E,kLAEZC,OAAOC,OAKZD,OAAOC,OAAOC,cAAa,WACzBC,YAAW,WACT,IAAMC,EAAG,UAAMJ,OAAOK,SAASC,OAAtB,wBACTC,QAAQC,IAAR,8BAAmCJ,IACnCJ,OAAOC,OAAOQ,MAAM,WAAY,GAAI,CAAEL,IAAKA,MAC1C,QATHG,QAAQG,KAAR,2BAAiCV,OAAOC,W,+BAc1C,OACE,2C,GAlB6BU,aCAdC,E,kLAEZZ,OAAOC,OAKZD,OAAOC,OAAOC,cAAa,WACzBC,YAAW,WACT,IAAMC,EAAG,UAAMJ,OAAOK,SAASC,OAAtB,uBACTC,QAAQC,IAAR,8BAAmCJ,IACnCJ,OAAOC,OAAOQ,MAAM,WAAY,GAAI,CAAEL,IAAKA,MAC1C,QATHG,QAAQG,KAAR,2BAAiCV,OAAOC,W,+BAc1C,OACE,0C,GAlB4BU,a,uCCU5BE,EAAiBC,cAkBR,SAASC,IAWtB,OACE,cAAC,IAAD,CAAQC,QAASH,EAAjB,SACE,sBAAKI,UAAU,aAAf,UACE,gCACE,cAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,sBAA9B,kBADF,OAGE,cAAC,IAAD,CAAMD,UAAU,WAAWC,GAAG,uBAA9B,sBAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,uBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,sBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,IAAD,CAAUD,GAAG,6BAGjB,wBAAQE,QA7BO,WACnBpB,OAAOC,OAAOC,cAAa,SAACmB,EAAKC,GAC/Bf,QAAQC,IAAR,iBAAsBa,EAAtB,mBAAoCE,KAAKC,UAAUF,SA2BjD,2BAjBF,OAqBE,wBAAQF,QA3BQ,WACpBpB,OAAOC,OAAOQ,MAAM,aA0BhB,iCAnDRI,EAAeY,QAAO,SAAApB,OCdtB,IAYeqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCERQ,EAAS,CACbC,mBAAmB,EACnBC,gBAAiB,CACfC,eAAgB,CACdC,OAAQ,iBACRC,WAAY,WAGhBC,iBAAkB,SAAAC,GAGZA,EAAOC,WACPD,EAAOC,UAAUC,iBAAiB,MAAO,QAOjDC,IAAcC,SAASX,GACvBY,IAAUC,KAAK,mCAAoCb,GAEnDc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B3B,M","file":"static/js/main.cb67d1e3.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './App.css';\n\nexport default class About extends Component {\n  componentDidMount() {\n    if (!window.branch) {\n      console.warn(`window.branch is ${window.branch}`);\n      return;\n    }\n\n    window.branch.closeJourney(() => {\n      setTimeout(() => {\n        const url = `${window.location.origin}/journeys-demo/about`;\n        console.log(`Logging pageview to ${url}`);\n        window.branch.track('pageview', {}, { url: url });\n      }, 1000);\n    });\n  }\n\n  render() {\n    return (\n      <h2>About</h2>\n    );\n  }\n};\n","import { Component } from 'react';\nimport './App.css';\n\nexport default class Home extends Component {\n  componentDidMount() {\n    if (!window.branch) {\n      console.warn(`window.branch is ${window.branch}`);\n      return;\n    }\n\n    window.branch.closeJourney(() => {\n      setTimeout(() => {\n        const url = `${window.location.origin}/journeys-demo/home`;\n        console.log(`Logging pageview to ${url}`);\n        window.branch.track('pageview', {}, { url: url });\n      }, 1000);\n    });\n  }\n\n  render() {\n    return (\n      <h2>Home</h2>\n    );\n  }\n};\n","import './App.css';\nimport About from './About';\nimport Home from './Home';\nimport {\n  Router,\n  Redirect,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport 'branch-mparticle-web-kit';\n\nconst browserHistory = createBrowserHistory();\nbrowserHistory.listen(location => {\n  /* Can use browser history events instead of component lifecycle events to detect route changes\n  if (!window.branch) {\n    console.warn(`window.branch is ${window.branch}`);\n    return;\n  }\n\n  window.branch.closeJourney(() => {\n    setTimeout(() => {\n      const url = `${window.location.origin}${location.pathname}`;\n      console.log(`Logging pageview to ${url}`);\n      window.branch.track('pageview', {}, { url: url });\n    }, 1000);\n  });\n  // */\n});\n\nexport default function App() {\n  const closeJourney = () => {\n    window.branch.closeJourney((err, data) => {\n      console.log(`error: ${err}, data: ${JSON.stringify(data)}`);\n    });\n  };\n\n  const trackPageview = () => {\n    window.branch.track('pageview');\n  };\n\n  return (\n    <Router history={browserHistory}>\n      <div className='App-header'>\n        <nav>\n          <Link className='App-link' to='/journeys-demo/home'>Home</Link>\n          &nbsp;\n          <Link className='App-link' to='/journeys-demo/about'>About</Link>\n        </nav>\n        <Switch>\n          <Route path='/journeys-demo/about'>\n            <About/>\n          </Route>\n          <Route path='/journeys-demo/home'>\n            <Home/>\n          </Route>\n          <Route path='/'>\n            <Redirect to='/journeys-demo/home'/>\n          </Route>\n        </Switch>\n        <button onClick={closeJourney}>\n          Close Journey\n        </button>\n        &nbsp;\n        <button onClick={trackPageview}>\n          Track Pageview\n        </button>\n      </div>\n    </Router>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport mParticle from '@mparticle/web-sdk';\nimport BranchMetrics from 'branch-mparticle-web-kit';\n\nconst config = {\n  isDevelopmentMode: true, //switch to false (or remove) for production\n  identifyRequest: {\n    userIdentities: {\n      other3: 'otheridentity3',\n      customerid: '123456',\n    }\n  },\n  identityCallback: result => {\n    // You can check if there's a populated user object, otherwise there was an error\n    // You can also inspect the result.httpCode - see below for a description of the supported codes\n    if (result.getUser()) {\n        result.getUser().setUserAttribute('age', '25');\n    } else {\n        //the IDSync call failed - see below for more details on failed requests\n    }\n  },\n};\n\nBranchMetrics.register(config);\nmParticle.init(\"ad0494840f664c488a4c924d97ae5fdf\", config);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}