{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","window","branch","closeJourney","err","data","console","log","JSON","stringify","track","className","src","logo","alt","onClick","this","bind","trackPageview","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","config","isDevelopmentMode","identifyRequest","userIdentities","other3","customerid","identityCallback","result","getUser","setUserAttribute","BranchMetrics","register","mParticle","init","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAAe,MAA0B,iC,wBCKpBA,E,6KAEjBC,OAAOC,OAAOC,cAAa,SAACC,EAAKC,GAC/BC,QAAQC,IAAR,iBAAsBH,EAAtB,mBAAoCI,KAAKC,UAAUJ,U,sCAKrDJ,OAAOC,OAAOQ,MAAM,c,+BAIpB,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,wBAAQC,QAASC,KAAKb,aAAac,KAAKD,MAAxC,2BAGA,wBAAQD,QAASC,KAAKE,cAAcD,KAAKD,MAAzC,qC,GAtBuBG,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCCRQ,EAAS,CACbC,mBAAmB,EACnBC,gBAAiB,CACfC,eAAgB,CACdC,OAAQ,iBACRC,WAAY,WAGhBC,iBAAkB,SAAAC,GAGZA,EAAOC,WACPD,EAAOC,UAAUC,iBAAiB,MAAO,QAOjDC,IAAcC,SAASX,GACvBY,IAAUC,KAAK,mCAAoCb,GAEnDc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B3B,M","file":"static/js/main.5db1d5ae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'branch-mparticle-web-kit';\n\nexport default class App extends Component {\n  closeJourney() {\n    window.branch.closeJourney((err, data) => {\n      console.log(`error: ${err}, data: ${JSON.stringify(data)}`);\n    });\n  }\n\n  trackPageview() {\n    window.branch.track('pageview');\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <button onClick={this.closeJourney.bind(this)}>\n            Close Journey\n          </button>\n          <button onClick={this.trackPageview.bind(this)}>\n            Track Pageview\n          </button>\n        </header>\n      </div>\n    );\n  }\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport mParticle from '@mparticle/web-sdk';\nimport BranchMetrics from 'branch-mparticle-web-kit';\n\nconst config = {\n  isDevelopmentMode: true, //switch to false (or remove) for production\n  identifyRequest: {\n    userIdentities: {\n      other3: 'otheridentity3',\n      customerid: '123456',\n    }\n  },\n  identityCallback: result => {\n    // You can check if there's a populated user object, otherwise there was an error\n    // You can also inspect the result.httpCode - see below for a description of the supported codes\n    if (result.getUser()) {\n        result.getUser().setUserAttribute('age', '25');\n    } else {\n        //the IDSync call failed - see below for more details on failed requests\n    }\n  },\n};\n\nBranchMetrics.register(config);\nmParticle.init(\"ad0494840f664c488a4c924d97ae5fdf\", config);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}